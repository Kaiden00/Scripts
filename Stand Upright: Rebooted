if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Client = game:GetService("Players").LocalPlayer
local ItemFolder = workspace.Items

local foundAnything = ""

if not Client.Character then 
    Client.CharacterAdded:Wait()
    Client.Character:WaitForChild("Humanoid")
end

local function Teleport() --credits to charwar
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local actualHour = os.date("!*t").hour
    local Deleted = false
    local File = pcall(function()
        AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
    end)
    if not File then
        table.insert(AllIDs, actualHour)
        writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
    end
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

local function GetItem(Tool)
    if not Tool:IsA("Tool") then return end
    Client.Character.Humanoid:EquipTool(Tool)
end

ItemFolder.ChildAdded:Connect(GetItem)

for _, Tool in ipairs(ItemFolder:GetChildren()) do
    GetItem(Tool)
end

syn.queue_on_teleport([[
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Kaiden00/Scripts/main/Stand%20Upright%3A%20Rebooted"))()
]])


while task.wait() do
    pcall(function()
        Teleport()
        if foundAnything ~= "" then
            Teleport()
        end
    end)
end
