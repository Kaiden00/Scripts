
if not game:IsLoaded() then 
    game.Loaded:Wait()
end

--//Dependencies
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/wally-rblx/uwuware-ui/main/main.lua"))()

--//Variables
local Client = Players.LocalPlayer
local Character = Client.Character or Client.CharacterAdded:Wait()

local DataFolder = Client:WaitForChild("Data")
local QuestFolder = DataFolder:WaitForChild("Quests")

local ClientStand = DataFolder:WaitForChild("Stand")

local Window = Library:CreateWindow("SU:Rebooted")
local MainFolder = Window:AddFolder("Main")
local CreditsFolder = Window:AddFolder("Credits")

local ItemFolder = workspace.Items
local NPCFolder = workspace.Npcs
local LivingFolder = workspace.Living

local TargetMob = nil

local MobValues = {}
local StandList = {}
local QuestList = {
    ["Bad Gi"] = NPCFolder["Giorno Giovanna lvl 1 Quest"],
    ["Giorno Giovanna"] = NPCFolder["Koichi lvl 5 Quest"],
    ["Scary Monster"] = NPCFolder["Noob lvl 10 Quest"],
    ["Rker Dummy"] = NPCFolder["allMemester lvl 15+ quest"],
    ["Dio Over Heaven"] = NPCFolder["Young Joseph Quest lvl 25+"],
    ["Yoshikage Kira"] = NPCFolder["Okuyasu Quest lvl 30+"],
    ["Angelo"] = NPCFolder["Josuke Quest lvl 40+"],
    ["Alien"] = NPCFolder["Rohan Quest lvl 50+"],
    ["Jotaro Part 4"] = NPCFolder["Dio quest lvl 65+"],
    ["Kakyoin"] = NPCFolder["Avdol lvl 75+"],
    ["Jungle Bandit"] = NPCFolder["Boss Giorno Giovanna lvl 90 Quest"],
}
local StandBlacklist = {"CauldronBlack", "TalkingBen", "GER"}

--//Functions
local function IsAlive(Model)
    if not Model or not Model.Parent then return end
    local Humanoid = Model:FindFirstChildWhichIsA("Humanoid")

    if not Humanoid or not Model:FindFirstChild("HumanoidRootPart") then return end
    if Humanoid:GetState() == Enum.HumanoidStateType.Dead then return end
    
    return true
end

local function GetQuest()
    local NPC = QuestList[Library.flags.Target]
    if not NPC then return warn("Couldn't find NPC") end

    for _, Folder in ipairs(QuestFolder:GetChildren()) do 
        local EnemyObject = Folder:FindFirstChild("Enemy")

        if EnemyObject and EnemyObject.Value == Library.flags.Target then
            if Folder.Completed.Value then
                NPC.QuestDone:FireServer()
            end
            return
        end 
    end

    NPC.Done:FireServer() --get quest
end

local function Attack()
    local EventFolder = Character:FindFirstChild("StandEvents")
    if not EventFolder then return end
    
    EventFolder.M1:FireServer()

    if Library.flags.StandAttack then
        local Stand = Character:FindFirstChild("Stand")
        if not Stand then return end

        if not Character.Aura.Value then
            EventFolder.Summon:FireServer()
        end

        for _, Event in ipairs(EventFolder:GetChildren()) do 
            if Event.Name == "Block" then continue end
            if Event.Name == "Quote" then continue end
            if Event.Name == "Pose" then continue end
            if Event.Name == "Summon" then continue end

            Event:FireServer(true)
        end 
    end 
end

local function GetItem(Tool)
    if not Library.flags.Itemfarm then return end
    if not Tool:IsA("Tool") then return end

    repeat
        Character.HumanoidRootPart.CFrame = Tool:FindFirstChildWhichIsA("BasePart").CFrame * CFrame.new(0, 15, 0)
        task.wait(0.5)
        Character.Humanoid:EquipTool(Tool)
    until not Tool or Tool.Parent ~= ItemFolder or Tool.Parent ~= workspace
end

local function RunGetItem()
    if not Library.flags.Itemfarm then return end

    for _, Tool in ipairs(ItemFolder:GetChildren()) do
        GetItem(Tool)
    end

    for _, Tool in ipairs(workspace:GetChildren()) do
        GetItem(Tool)
    end
end 

local function SetTargetMob()
    if Library.flags.LairFarm then 
        local Boss = LivingFolder:FindFirstChild("Boss")
        if not Boss then return end

        TargetMob = Boss
        return 
    end

    for _, Mob in ipairs(LivingFolder:GetChildren()) do 
        if Players:GetPlayerFromCharacter(Mob) then continue end
        if not IsAlive(Mob) then continue end
        if Mob.Name ~= Library.flags.Target then continue end
        TargetMob = Mob
        break
    end
end

local function HideName()
    if not Library.flags.NameHide then return end
    Character:WaitForChild("Head"):WaitForChild("HealthGui"):Destroy()
end

local function GetLair()
    if not Library.flags.LairFarm then return end

    for _, NPC in ipairs(NPCFolder:GetChildren()) do
        if string.lower(NPC.Name):find(Library.flags.LairTarget.." lair") then
            NPC.Done:FireServer()
        end
    end
end

--//Init
RunService.Heartbeat:Connect(function()
    if not Library.flags.MobFarm then return end
    if not Character then return end

    if not IsAlive(Character) then return end
    if not IsAlive(TargetMob) or TargetMob.Name ~= Library.flags.Target and TargetMob.Name ~= "Boss" then
        return SetTargetMob()
    end
    if Library.flags.AutoQuest then
        GetQuest()
    end

    Character.HumanoidRootPart.CFrame = TargetMob.HumanoidRootPart.CFrame * CFrame.new(0, -7, 0) * CFrame.Angles(math.rad(90),0,0)
    Attack()
end)

Client.CharacterAdded:Connect(function(NewCharacter)
    Character = NewCharacter
    HideName()
    GetLair()
    RunGetItem()
end)

ItemFolder.ChildAdded:Connect(GetItem)

local Old; Old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)    
    if tostring(self) == "PlayerStandMainHandler" or getnamecallmethod() == "Kick" and not checkcaller() then
        return wait(9e9)
    end 
    
    return Old(self, ...)
end))

for _, Connection in pairs(getconnections(Client.Idled)) do --anti afk
    Connection:Disable()
end

--//UI
for MobName, _ in pairs(QuestList) do
    if table.find(MobValues, MobName) then continue end
    MobValues[#MobValues + 1] = MobName
end

for _, Mob in ipairs(LivingFolder:GetChildren()) do
    if Players:GetPlayerFromCharacter(Mob) then continue end
    if table.find(MobValues, Mob.Name) then continue end
    MobValues[#MobValues + 1] = Mob.Name
end

for _, StandObject in ipairs(game:GetService("ReplicatedStorage").StandNameConvert:GetChildren()) do 
    if table.find(StandList, StandObject.Name) then continue end
    if table.find(StandBlacklist, StandObject.Name) then continue end
    if string.lower(StandObject.Name):find("oh") or string.lower(StandObject.Name):find("overheaven")  then continue end

    StandList[#StandList + 1] = StandObject.Name
end

MainFolder:AddList({text = "Mob Target", flag = "Target", values = MobValues})
MainFolder:AddList({text = "Lairs", flag = "LairTarget", values = {"lvl 15", "lvl 40", "lvl 80", "lvl 100"}})
MainFolder:AddList({text = "Stand Farm", flag = "TargetStand", values = StandList})
MainFolder:AddList({text = "Arrow Selector", flag = "Arrow", values = {"Stand Arrow", "Charged Arrow"}})

MainFolder:AddToggle({text = "ENABLE FARM", flag = "MobFarm"})
MainFolder:AddToggle({text = "Lair Farm", flag = "LairFarm", callback = GetLair}) --get lair quest
MainFolder:AddToggle({text = "Item Farm", flag = "Itemfarm", callback = RunGetItem})
MainFolder:AddToggle({text = "Stand Farm", flag = "StandFarm", callback = function()
    while Library.flags.StandFarm and ClientStand.Value ~= Library.flags.TargetStand and task.wait(0.2) do
        local Arrow = Client.Backpack:FindFirstChild(Library.flags.Arrow) or Character:FindFirstChild(Library.flags.Arrow)
        local Fruit = Client.Backpack:FindFirstChild("Rokakaka") or Character:FindFirstChild("Rokakaka")

        if not Arrow or not Fruit then continue end

        if ClientStand.Value == "None" then 
            repeat
                Arrow.Parent = Character
                task.wait(0.3)
                Arrow.Use:FireServer()
            until ClientStand.Value ~= "None" or not Library.flags.StandFarm
        else
            repeat 
                Fruit.Parent = Character
                task.wait(0.3)
                Fruit.Use:FireServer()
            until ClientStand.Value == "None" or not Library.flags.StandFarm
        end 
    end 

    if Library.flags.TargetStand == ClientStand.Value then 
        warn("Got stand!!!!")
    end 
end})

MainFolder:AddToggle({text = "Auto Quest", flag = "AutoQuest"})
MainFolder:AddToggle({text = "Auto Stand Skills", flag = "StandAttack"})
MainFolder:AddToggle({text = "Name Hide", flag = "NameHide", callback = HideName})


CreditsFolder:AddLabel({text = "Script: Kaiden"})
CreditsFolder:AddLabel({text = "UI Library: Jan"})

Window:AddLabel({text = "StandFarm needs arrow/fruit"})
Window:AddLabel({text = "DM bugs: Kaiden#2444"})

Library:Init()
warn("Loaded script successfully")
