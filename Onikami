
if not game:IsLoaded() then game.Loaded:Wait() end

--//Services
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local VirtualUser =  game:GetService("VirtualUser")

--//Imports
local Maid = loadstring(game:HttpGet("https://raw.githubusercontent.com/Quenty/NevermoreEngine/version2/Modules/Shared/Events/Maid.lua"))()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/wally-rblx/uwuware-ui/main/main.lua"))()

--//Variables
local Client = game:GetService("Players").LocalPlayer
local Exclusions = {
    "LoadBackpack"
}

local MainMaid = Maid.new()

local Window = Library:CreateWindow("Onikami")
local MainFolder = Window:AddFolder("Main")
local CreditsFolder = Window:AddFolder("Credits")

--//Functions
local function Attack()
    for _, Tool in ipairs(Client.Backpack:GetChildren()) do
        Tool.Parent = Client.Character
    end

    game:GetService("ReplicatedStorage").Remotes.CombatRemotes.Katana:FireServer("Release")
    game:GetService("ReplicatedStorage").Remotes.CombatRemotes.Fists:FireServer("Release")
end

local function CheckCondition(Humanoid, HumanoidRootPart)
    if not Humanoid or not HumanoidRootPart then return end
    if not Humanoid.Parent.Parent then return end
    if Humanoid.Health <= 0 then return end

    return true
end

local function OnChildAdded(Object) --Remove debuffs
    if not Library.flags.Antidebuff then return end
    if table.find(Exclusions, Object.Name) then return end
    if not Object:IsA("StringValue") and not Object:IsA("BoolValue") then return end
    
    repeat task.wait()
        Object:Destroy()
    until Object.Parent == nil
end

local function OnCharacterAdded(Character)
    MainMaid:DoCleaning()

    local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
    local Humanoid = Character:WaitForChild("Humanoid")
    local TargetMob, TargetHumanoid, TargetHumanoidRootPart = nil, nil, nil

    Character.ChildAdded:Connect(OnChildAdded)

    local function SearchMob()
        if TargetMob then return end

        for _, Mob in ipairs(workspace.LivingThings:GetChildren()) do
            if not Library.flags.Autofarm then break end
            if Mob.Name ~= Library.flags.TargetMob then continue end
            if Players:GetPlayerFromCharacter(Mob) then continue end

            local MobHumanoid = Mob:FindFirstChild("Humanoid")
            local MobHumanoidRootPart = Mob:FindFirstChild("HumanoidRootPart")

            if not CheckCondition(MobHumanoid, MobHumanoidRootPart) then continue end
            if not TargetHumanoid then TargetHumanoid = MobHumanoid continue end

            if MobHumanoid.Health < TargetHumanoid.Health then
                TargetHumanoid = MobHumanoid
            end
        end
        TargetMob = TargetHumanoid.Parent
        TargetHumanoidRootPart = TargetMob.HumanoidRootPart
    end

    MainMaid:GiveTask(RunService.Stepped:Connect(function() --Noclip
        if not Humanoid then return end
        Humanoid:ChangeState(11)
    end))

    MainMaid:GiveTask(RunService.Heartbeat:Connect(function() --Autofarm
        if not Library.flags.Autofarm then return end
        if not CheckCondition(Humanoid, HumanoidRootPart) then return end
        SearchMob()

        if not CheckCondition(TargetHumanoid, TargetHumanoidRootPart) then
            TargetMob, TargetHumanoid, TargetHumanoidRootPart = nil, nil, nil
            return
        end
        
        if Character.Values.Demon.Value and not Client.Quest.IsActive.Value and Library.flags.TargetMob == "Slayer" then --Auto quest
            Client.PlayerGui.GUI.QuestFrame.Drop.LocalScript.RemoteEvent:FireServer()
            HumanoidRootPart.CFrame = workspace.IntNpcs.MissionD.HumanoidRootPart.CFrame
            game:GetService("ReplicatedStorage").Remotes.GiverQuest:FireServer("MissionDemon")
            return
        end

        HumanoidRootPart.CFrame = TargetHumanoidRootPart.CFrame * CFrame.new(0,-5.5,0) * CFrame.Angles(math.rad(90),0,0)
        Attack()
    end))
end

--//Initialise
task.spawn(OnCharacterAdded, Client.Character or Client.CharacterAdded:Wait())
Client.CharacterAdded:Connect(OnCharacterAdded)

Client.Idled:Connect(function() --Anti afk
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

local Old; Old = hookmetamethod(game, "__namecall", newcclosure(function(self, ...) --Anti fall damage
    local Args = {...}
    local Method = getnamecallmethod()
    
    if Method == "FireServer" and tostring(self) == "ThisOne" then
        return wait(9e9)
    end

    return Old(self, ...)
end))

MainFolder:AddToggle({text = "Autofarm", flag = "Autofarm" })
MainFolder:AddToggle({text = "Anti-Debuff", flag = "Antidebuff", callback = function()
    if not Client.Character then return end
    for _, Object in ipairs(Client.Character:GetChildren()) do 
        OnChildAdded(Object)
    end
end})
MainFolder:AddList({text = "Mob", flag = "TargetMob", values = {"Slayer", "Demon", "Human"}})
Window:AddBind({text = "Menu toggle", key = Enum.KeyCode.Delete, callback = function() Library:Close() end})

CreditsFolder:AddLabel({text = "Script: Kaiden"})
CreditsFolder:AddLabel({text = "UI Library: Jan"})

Library:Init()

warn("Loaded script!")
