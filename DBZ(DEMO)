
if Debounce then
    return
end; getgenv().Debounce = true

if not game:IsLoaded() then
    game.Loaded:Wait()
end

--//Variables
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/wally-rblx/uwuware-ui/main/main.lua"))()
local QuestsData = require(game.ReplicatedStorage.Quests.QuestModule).Quests

local Client = Players.LocalPlayer
local LiveFolder = workspace.Main.Live

local AttackEvent = ReplicatedStorage.Events.TryAttack
local QuestEvent = ReplicatedStorage.RemoteEvents.AcceptQuest

local Window = Library:CreateWindow("DBZ (DEMO)")
local MainFolder = Window:AddFolder("Main")
local CreditsFolder = Window:AddFolder("Credits")

local CurrentQuest = Client:WaitForChild("Data"):WaitForChild("CurrentQuest")
local TargetMob = nil

--//Functions
local function GetQuest()
    for QuestNPC, Data in pairs(QuestsData) do
        if table.find(Data.Requirements[1], Library.flags.Target) then
            if CurrentQuest.Value == QuestNPC then return end
            game:GetService("ReplicatedStorage").RemoteEvents.AcceptQuest:FireServer(true, QuestNPC)
        end
    end
end

local function IsAlive(Character)
    if not Character or not Character.Parent then return end
    local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")

    if not Humanoid or not Character:FindFirstChild("HumanoidRootPart") then return end
    if Humanoid:GetState() == Enum.HumanoidStateType.Dead then return end
    
    return true
end

local function ValidateMob(Mob)
    if Mob.Name ~= Library.flags.Target and Library.flags.Target ~= "Farm all(Good if new)" then
        return
    end
    
    return true
end

local function SetTargetMob()
    for _, Mob in ipairs(LiveFolder:GetChildren()) do 
        if Players:GetPlayerFromCharacter(Mob) then continue end
        if not ValidateMob(Mob) then continue end

        if not IsAlive(Mob) then continue end
        if Library.flags.Target == "Farm all(Good if new)" and Mob:FindFirstChildWhichIsA("Humanoid").Health > 5000 then continue end
        
        TargetMob = Mob
        break
    end
end

--//Init
RunService.Heartbeat:Connect(function()
    if not Library.flags.MobFarm then return end
    
    local Character = Client.Character
    if not Character then return end
    
    if not IsAlive(Character) then return end
    if not IsAlive(TargetMob) or not ValidateMob(TargetMob) then
        return SetTargetMob()
    end

    if Library.flags.AutoQuest and Library.flags.Target ~= "Farm all(Good if new)"  then
        GetQuest()
    end
    
    local VulnObject = Character.Occupied:FindFirstChild("Invulnerable")
    if VulnObject then VulnObject:Destroy() end --god mode
    
    local MobHumanoidRootPart = TargetMob.HumanoidRootPart
    Client.Character.HumanoidRootPart.CFrame = MobHumanoidRootPart.CFrame
    
    AttackEvent:FireServer({
        Victim = TargetMob,
        Type = "Light",
        LocalInfo = {Flying = false},
        CurrentHeavy = 1,
        CurrentLight = 1,
        CurrentLightCombo = 1,
        VictimPosition = MobHumanoidRootPart.Position,
        AnimSet = "Android17"
    })
end)

for _, Connection in pairs(getconnections(Client.Idled)) do --anti afk
    Connection:Disable()
end

--//UI
local MobNames = {}
MobNames[1] = "Farm all(Good if new)"

for _, Mob in ipairs(LiveFolder:GetChildren()) do
    if Players:GetPlayerFromCharacter(Mob) then continue end
    if table.find(MobNames, Mob.Name) then continue end
    MobNames[#MobNames + 1] = Mob.Name
end 

MainFolder:AddList({text = "Mob Target", flag = "Target", values = MobNames})
MainFolder:AddToggle({text = "Mob Farm", flag = "MobFarm"})
MainFolder:AddToggle({text = "Auto Quest", flag = "AutoQuest"})

CreditsFolder:AddLabel({text = "Script: Kaiden"})
CreditsFolder:AddLabel({text = "UI Library: Jan"})

Window:AddLabel({text = "DM Bugs: Kaiden#2444"})
Window:AddLabel({text = "Added Auto quest/Anti AFK"})


Library:Init()

warn("Loaded script successfully")
